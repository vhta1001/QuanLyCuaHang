#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_BANMAYLANH")]
	public partial class QLCHDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCT_HoaDonBan(CT_HoaDonBan instance);
    partial void UpdateCT_HoaDonBan(CT_HoaDonBan instance);
    partial void DeleteCT_HoaDonBan(CT_HoaDonBan instance);
    partial void InsertCT_HoaDonNhap(CT_HoaDonNhap instance);
    partial void UpdateCT_HoaDonNhap(CT_HoaDonNhap instance);
    partial void DeleteCT_HoaDonNhap(CT_HoaDonNhap instance);
    partial void InsertHoaDonBan(HoaDonBan instance);
    partial void UpdateHoaDonBan(HoaDonBan instance);
    partial void DeleteHoaDonBan(HoaDonBan instance);
    partial void InsertHoaDonNhap(HoaDonNhap instance);
    partial void UpdateHoaDonNhap(HoaDonNhap instance);
    partial void DeleteHoaDonNhap(HoaDonNhap instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiNV(LoaiNV instance);
    partial void UpdateLoaiNV(LoaiNV instance);
    partial void DeleteLoaiNV(LoaiNV instance);
    partial void InsertManHinh(ManHinh instance);
    partial void UpdateManHinh(ManHinh instance);
    partial void DeleteManHinh(ManHinh instance);
    partial void InsertMayLanh(MayLanh instance);
    partial void UpdateMayLanh(MayLanh instance);
    partial void DeleteMayLanh(MayLanh instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhanQuyen(PhanQuyen instance);
    partial void UpdatePhanQuyen(PhanQuyen instance);
    partial void DeletePhanQuyen(PhanQuyen instance);
    #endregion
		
		public QLCHDataContext() : 
				base(global::BLL.Properties.Settings.Default.QL_BANMAYLANHConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QLCHDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLCHDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLCHDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLCHDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CT_HoaDonBan> CT_HoaDonBans
		{
			get
			{
				return this.GetTable<CT_HoaDonBan>();
			}
		}
		
		public System.Data.Linq.Table<CT_HoaDonNhap> CT_HoaDonNhaps
		{
			get
			{
				return this.GetTable<CT_HoaDonNhap>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonBan> HoaDonBans
		{
			get
			{
				return this.GetTable<HoaDonBan>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonNhap> HoaDonNhaps
		{
			get
			{
				return this.GetTable<HoaDonNhap>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiNV> LoaiNVs
		{
			get
			{
				return this.GetTable<LoaiNV>();
			}
		}
		
		public System.Data.Linq.Table<ManHinh> ManHinhs
		{
			get
			{
				return this.GetTable<ManHinh>();
			}
		}
		
		public System.Data.Linq.Table<MayLanh> MayLanhs
		{
			get
			{
				return this.GetTable<MayLanh>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyen> PhanQuyens
		{
			get
			{
				return this.GetTable<PhanQuyen>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HoaDonBan")]
	public partial class CT_HoaDonBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdML;
		
		private int _IdHDB;
		
		private int _SoLuongBan;
		
		private double _DonGiaBan;
		
		private double _thanhtien;
		
		private EntityRef<HoaDonBan> _HoaDonBan;
		
		private EntityRef<MayLanh> _MayLanh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdMLChanging(int value);
    partial void OnIdMLChanged();
    partial void OnIdHDBChanging(int value);
    partial void OnIdHDBChanged();
    partial void OnSoLuongBanChanging(int value);
    partial void OnSoLuongBanChanged();
    partial void OnDonGiaBanChanging(double value);
    partial void OnDonGiaBanChanged();
    partial void OnthanhtienChanging(double value);
    partial void OnthanhtienChanged();
    #endregion
		
		public CT_HoaDonBan()
		{
			this._HoaDonBan = default(EntityRef<HoaDonBan>);
			this._MayLanh = default(EntityRef<MayLanh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdML", DbType="Int NOT NULL")]
		public int IdML
		{
			get
			{
				return this._IdML;
			}
			set
			{
				if ((this._IdML != value))
				{
					if (this._MayLanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMLChanging(value);
					this.SendPropertyChanging();
					this._IdML = value;
					this.SendPropertyChanged("IdML");
					this.OnIdMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHDB", DbType="Int NOT NULL")]
		public int IdHDB
		{
			get
			{
				return this._IdHDB;
			}
			set
			{
				if ((this._IdHDB != value))
				{
					if (this._HoaDonBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHDBChanging(value);
					this.SendPropertyChanging();
					this._IdHDB = value;
					this.SendPropertyChanged("IdHDB");
					this.OnIdHDBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongBan", DbType="Int NOT NULL")]
		public int SoLuongBan
		{
			get
			{
				return this._SoLuongBan;
			}
			set
			{
				if ((this._SoLuongBan != value))
				{
					this.OnSoLuongBanChanging(value);
					this.SendPropertyChanging();
					this._SoLuongBan = value;
					this.SendPropertyChanged("SoLuongBan");
					this.OnSoLuongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGiaBan", DbType="Float NOT NULL")]
		public double DonGiaBan
		{
			get
			{
				return this._DonGiaBan;
			}
			set
			{
				if ((this._DonGiaBan != value))
				{
					this.OnDonGiaBanChanging(value);
					this.SendPropertyChanging();
					this._DonGiaBan = value;
					this.SendPropertyChanged("DonGiaBan");
					this.OnDonGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhtien", DbType="Float NOT NULL")]
		public double thanhtien
		{
			get
			{
				return this._thanhtien;
			}
			set
			{
				if ((this._thanhtien != value))
				{
					this.OnthanhtienChanging(value);
					this.SendPropertyChanging();
					this._thanhtien = value;
					this.SendPropertyChanged("thanhtien");
					this.OnthanhtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBan_CT_HoaDonBan", Storage="_HoaDonBan", ThisKey="IdHDB", OtherKey="Id", IsForeignKey=true)]
		public HoaDonBan HoaDonBan
		{
			get
			{
				return this._HoaDonBan.Entity;
			}
			set
			{
				HoaDonBan previousValue = this._HoaDonBan.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonBan.Entity = null;
						previousValue.CT_HoaDonBans.Remove(this);
					}
					this._HoaDonBan.Entity = value;
					if ((value != null))
					{
						value.CT_HoaDonBans.Add(this);
						this._IdHDB = value.Id;
					}
					else
					{
						this._IdHDB = default(int);
					}
					this.SendPropertyChanged("HoaDonBan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MayLanh_CT_HoaDonBan", Storage="_MayLanh", ThisKey="IdML", OtherKey="Id", IsForeignKey=true)]
		public MayLanh MayLanh
		{
			get
			{
				return this._MayLanh.Entity;
			}
			set
			{
				MayLanh previousValue = this._MayLanh.Entity;
				if (((previousValue != value) 
							|| (this._MayLanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MayLanh.Entity = null;
						previousValue.CT_HoaDonBans.Remove(this);
					}
					this._MayLanh.Entity = value;
					if ((value != null))
					{
						value.CT_HoaDonBans.Add(this);
						this._IdML = value.Id;
					}
					else
					{
						this._IdML = default(int);
					}
					this.SendPropertyChanged("MayLanh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HoaDonNhap")]
	public partial class CT_HoaDonNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdML;
		
		private int _IdHDN;
		
		private int _SoLuongNhap;
		
		private double _DonGiaNhap;
		
		private double _thanhtien;
		
		private EntityRef<HoaDonNhap> _HoaDonNhap;
		
		private EntityRef<MayLanh> _MayLanh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdMLChanging(int value);
    partial void OnIdMLChanged();
    partial void OnIdHDNChanging(int value);
    partial void OnIdHDNChanged();
    partial void OnSoLuongNhapChanging(int value);
    partial void OnSoLuongNhapChanged();
    partial void OnDonGiaNhapChanging(double value);
    partial void OnDonGiaNhapChanged();
    partial void OnthanhtienChanging(double value);
    partial void OnthanhtienChanged();
    #endregion
		
		public CT_HoaDonNhap()
		{
			this._HoaDonNhap = default(EntityRef<HoaDonNhap>);
			this._MayLanh = default(EntityRef<MayLanh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdML", DbType="Int NOT NULL")]
		public int IdML
		{
			get
			{
				return this._IdML;
			}
			set
			{
				if ((this._IdML != value))
				{
					if (this._MayLanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMLChanging(value);
					this.SendPropertyChanging();
					this._IdML = value;
					this.SendPropertyChanged("IdML");
					this.OnIdMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHDN", DbType="Int NOT NULL")]
		public int IdHDN
		{
			get
			{
				return this._IdHDN;
			}
			set
			{
				if ((this._IdHDN != value))
				{
					if (this._HoaDonNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHDNChanging(value);
					this.SendPropertyChanging();
					this._IdHDN = value;
					this.SendPropertyChanged("IdHDN");
					this.OnIdHDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongNhap", DbType="Int NOT NULL")]
		public int SoLuongNhap
		{
			get
			{
				return this._SoLuongNhap;
			}
			set
			{
				if ((this._SoLuongNhap != value))
				{
					this.OnSoLuongNhapChanging(value);
					this.SendPropertyChanging();
					this._SoLuongNhap = value;
					this.SendPropertyChanged("SoLuongNhap");
					this.OnSoLuongNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGiaNhap", DbType="Float NOT NULL")]
		public double DonGiaNhap
		{
			get
			{
				return this._DonGiaNhap;
			}
			set
			{
				if ((this._DonGiaNhap != value))
				{
					this.OnDonGiaNhapChanging(value);
					this.SendPropertyChanging();
					this._DonGiaNhap = value;
					this.SendPropertyChanged("DonGiaNhap");
					this.OnDonGiaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhtien", DbType="Float NOT NULL")]
		public double thanhtien
		{
			get
			{
				return this._thanhtien;
			}
			set
			{
				if ((this._thanhtien != value))
				{
					this.OnthanhtienChanging(value);
					this.SendPropertyChanging();
					this._thanhtien = value;
					this.SendPropertyChanged("thanhtien");
					this.OnthanhtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhap_CT_HoaDonNhap", Storage="_HoaDonNhap", ThisKey="IdHDN", OtherKey="Id", IsForeignKey=true)]
		public HoaDonNhap HoaDonNhap
		{
			get
			{
				return this._HoaDonNhap.Entity;
			}
			set
			{
				HoaDonNhap previousValue = this._HoaDonNhap.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonNhap.Entity = null;
						previousValue.CT_HoaDonNhaps.Remove(this);
					}
					this._HoaDonNhap.Entity = value;
					if ((value != null))
					{
						value.CT_HoaDonNhaps.Add(this);
						this._IdHDN = value.Id;
					}
					else
					{
						this._IdHDN = default(int);
					}
					this.SendPropertyChanged("HoaDonNhap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MayLanh_CT_HoaDonNhap", Storage="_MayLanh", ThisKey="IdML", OtherKey="Id", IsForeignKey=true)]
		public MayLanh MayLanh
		{
			get
			{
				return this._MayLanh.Entity;
			}
			set
			{
				MayLanh previousValue = this._MayLanh.Entity;
				if (((previousValue != value) 
							|| (this._MayLanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MayLanh.Entity = null;
						previousValue.CT_HoaDonNhaps.Remove(this);
					}
					this._MayLanh.Entity = value;
					if ((value != null))
					{
						value.CT_HoaDonNhaps.Add(this);
						this._IdML = value.Id;
					}
					else
					{
						this._IdML = default(int);
					}
					this.SendPropertyChanged("MayLanh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonBan")]
	public partial class HoaDonBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdNV;
		
		private int _IdKH;
		
		private System.DateTime _NgayBan;
		
		private System.DateTime _NgayGiao;
		
		private double _TongTien;
		
		private EntitySet<CT_HoaDonBan> _CT_HoaDonBans;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdNVChanging(int value);
    partial void OnIdNVChanged();
    partial void OnIdKHChanging(int value);
    partial void OnIdKHChanged();
    partial void OnNgayBanChanging(System.DateTime value);
    partial void OnNgayBanChanged();
    partial void OnNgayGiaoChanging(System.DateTime value);
    partial void OnNgayGiaoChanged();
    partial void OnTongTienChanging(double value);
    partial void OnTongTienChanged();
    #endregion
		
		public HoaDonBan()
		{
			this._CT_HoaDonBans = new EntitySet<CT_HoaDonBan>(new Action<CT_HoaDonBan>(this.attach_CT_HoaDonBans), new Action<CT_HoaDonBan>(this.detach_CT_HoaDonBans));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNV", DbType="Int NOT NULL")]
		public int IdNV
		{
			get
			{
				return this._IdNV;
			}
			set
			{
				if ((this._IdNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNVChanging(value);
					this.SendPropertyChanging();
					this._IdNV = value;
					this.SendPropertyChanged("IdNV");
					this.OnIdNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKH", DbType="Int NOT NULL")]
		public int IdKH
		{
			get
			{
				return this._IdKH;
			}
			set
			{
				if ((this._IdKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKHChanging(value);
					this.SendPropertyChanging();
					this._IdKH = value;
					this.SendPropertyChanged("IdKH");
					this.OnIdKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBan", DbType="DateTime NOT NULL")]
		public System.DateTime NgayBan
		{
			get
			{
				return this._NgayBan;
			}
			set
			{
				if ((this._NgayBan != value))
				{
					this.OnNgayBanChanging(value);
					this.SendPropertyChanging();
					this._NgayBan = value;
					this.SendPropertyChanged("NgayBan");
					this.OnNgayBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiao", DbType="DateTime NOT NULL")]
		public System.DateTime NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float NOT NULL")]
		public double TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBan_CT_HoaDonBan", Storage="_CT_HoaDonBans", ThisKey="Id", OtherKey="IdHDB")]
		public EntitySet<CT_HoaDonBan> CT_HoaDonBans
		{
			get
			{
				return this._CT_HoaDonBans;
			}
			set
			{
				this._CT_HoaDonBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDonBan", Storage="_KhachHang", ThisKey="IdKH", OtherKey="Id", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoaDonBans.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoaDonBans.Add(this);
						this._IdKH = value.Id;
					}
					else
					{
						this._IdKH = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonBan", Storage="_NhanVien", ThisKey="IdNV", OtherKey="Id", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDonBans.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDonBans.Add(this);
						this._IdNV = value.Id;
					}
					else
					{
						this._IdNV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HoaDonBans(CT_HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBan = this;
		}
		
		private void detach_CT_HoaDonBans(CT_HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonNhap")]
	public partial class HoaDonNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdNV;
		
		private int _IdNCC;
		
		private System.DateTime _NgayNhap;
		
		private double _TongTien;
		
		private EntitySet<CT_HoaDonNhap> _CT_HoaDonNhaps;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdNVChanging(int value);
    partial void OnIdNVChanged();
    partial void OnIdNCCChanging(int value);
    partial void OnIdNCCChanged();
    partial void OnNgayNhapChanging(System.DateTime value);
    partial void OnNgayNhapChanged();
    partial void OnTongTienChanging(double value);
    partial void OnTongTienChanged();
    #endregion
		
		public HoaDonNhap()
		{
			this._CT_HoaDonNhaps = new EntitySet<CT_HoaDonNhap>(new Action<CT_HoaDonNhap>(this.attach_CT_HoaDonNhaps), new Action<CT_HoaDonNhap>(this.detach_CT_HoaDonNhaps));
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNV", DbType="Int NOT NULL")]
		public int IdNV
		{
			get
			{
				return this._IdNV;
			}
			set
			{
				if ((this._IdNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNVChanging(value);
					this.SendPropertyChanging();
					this._IdNV = value;
					this.SendPropertyChanged("IdNV");
					this.OnIdNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNCC", DbType="Int NOT NULL")]
		public int IdNCC
		{
			get
			{
				return this._IdNCC;
			}
			set
			{
				if ((this._IdNCC != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNCCChanging(value);
					this.SendPropertyChanging();
					this._IdNCC = value;
					this.SendPropertyChanged("IdNCC");
					this.OnIdNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime NOT NULL")]
		public System.DateTime NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float NOT NULL")]
		public double TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhap_CT_HoaDonNhap", Storage="_CT_HoaDonNhaps", ThisKey="Id", OtherKey="IdHDN")]
		public EntitySet<CT_HoaDonNhap> CT_HoaDonNhaps
		{
			get
			{
				return this._CT_HoaDonNhaps;
			}
			set
			{
				this._CT_HoaDonNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_HoaDonNhap", Storage="_NhaCungCap", ThisKey="IdNCC", OtherKey="Id", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.HoaDonNhaps.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.HoaDonNhaps.Add(this);
						this._IdNCC = value.Id;
					}
					else
					{
						this._IdNCC = default(int);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonNhap", Storage="_NhanVien", ThisKey="IdNV", OtherKey="Id", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDonNhaps.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDonNhaps.Add(this);
						this._IdNV = value.Id;
					}
					else
					{
						this._IdNV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HoaDonNhaps(CT_HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhap = this;
		}
		
		private void detach_CT_HoaDonNhaps(CT_HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenKH;
		
		private string _DiaChiKH;
		
		private string _SDT;
		
		private EntitySet<HoaDonBan> _HoaDonBans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnDiaChiKHChanging(string value);
    partial void OnDiaChiKHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public KhachHang()
		{
			this._HoaDonBans = new EntitySet<HoaDonBan>(new Action<HoaDonBan>(this.attach_HoaDonBans), new Action<HoaDonBan>(this.detach_HoaDonBans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiKH", DbType="NVarChar(100)")]
		public string DiaChiKH
		{
			get
			{
				return this._DiaChiKH;
			}
			set
			{
				if ((this._DiaChiKH != value))
				{
					this.OnDiaChiKHChanging(value);
					this.SendPropertyChanging();
					this._DiaChiKH = value;
					this.SendPropertyChanged("DiaChiKH");
					this.OnDiaChiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(100)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDonBan", Storage="_HoaDonBans", ThisKey="Id", OtherKey="IdKH")]
		public EntitySet<HoaDonBan> HoaDonBans
		{
			get
			{
				return this._HoaDonBans;
			}
			set
			{
				this._HoaDonBans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDonBans(HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoaDonBans(HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiNV")]
	public partial class LoaiNV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenLoaiNV;
		
		private EntitySet<NhanVien> _NhanViens;
		
		private EntitySet<PhanQuyen> _PhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenLoaiNVChanging(string value);
    partial void OnTenLoaiNVChanged();
    #endregion
		
		public LoaiNV()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			this._PhanQuyens = new EntitySet<PhanQuyen>(new Action<PhanQuyen>(this.attach_PhanQuyens), new Action<PhanQuyen>(this.detach_PhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiNV", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenLoaiNV
		{
			get
			{
				return this._TenLoaiNV;
			}
			set
			{
				if ((this._TenLoaiNV != value))
				{
					this.OnTenLoaiNVChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiNV = value;
					this.SendPropertyChanged("TenLoaiNV");
					this.OnTenLoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiNV_NhanVien", Storage="_NhanViens", ThisKey="Id", OtherKey="IdLoaiNV")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiNV_PhanQuyen", Storage="_PhanQuyens", ThisKey="Id", OtherKey="IdLoaiNV")]
		public EntitySet<PhanQuyen> PhanQuyens
		{
			get
			{
				return this._PhanQuyens;
			}
			set
			{
				this._PhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.LoaiNV = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.LoaiNV = null;
		}
		
		private void attach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.LoaiNV = this;
		}
		
		private void detach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.LoaiNV = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ManHinh")]
	public partial class ManHinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _TenMH;
		
		private EntitySet<PhanQuyen> _PhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    #endregion
		
		public ManHinh()
		{
			this._PhanQuyens = new EntitySet<PhanQuyen>(new Action<PhanQuyen>(this.attach_PhanQuyens), new Action<PhanQuyen>(this.detach_PhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ManHinh_PhanQuyen", Storage="_PhanQuyens", ThisKey="Id", OtherKey="IdManHinh")]
		public EntitySet<PhanQuyen> PhanQuyens
		{
			get
			{
				return this._PhanQuyens;
			}
			set
			{
				this._PhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.ManHinh = this;
		}
		
		private void detach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.ManHinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MayLanh")]
	public partial class MayLanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdNCC;
		
		private string _TenML;
		
		private string _CongSuat;
		
		private System.Nullable<System.DateTime> _NamSX;
		
		private string _TinhNang;
		
		private string _CongNghe;
		
		private int _SoLuongTon;
		
		private System.Nullable<double> _DonGiaNhap;
		
		private double _DonGiaBan;
		
		private EntitySet<CT_HoaDonBan> _CT_HoaDonBans;
		
		private EntitySet<CT_HoaDonNhap> _CT_HoaDonNhaps;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdNCCChanging(int value);
    partial void OnIdNCCChanged();
    partial void OnTenMLChanging(string value);
    partial void OnTenMLChanged();
    partial void OnCongSuatChanging(string value);
    partial void OnCongSuatChanged();
    partial void OnNamSXChanging(System.Nullable<System.DateTime> value);
    partial void OnNamSXChanged();
    partial void OnTinhNangChanging(string value);
    partial void OnTinhNangChanged();
    partial void OnCongNgheChanging(string value);
    partial void OnCongNgheChanged();
    partial void OnSoLuongTonChanging(int value);
    partial void OnSoLuongTonChanged();
    partial void OnDonGiaNhapChanging(System.Nullable<double> value);
    partial void OnDonGiaNhapChanged();
    partial void OnDonGiaBanChanging(double value);
    partial void OnDonGiaBanChanged();
    #endregion
		
		public MayLanh()
		{
			this._CT_HoaDonBans = new EntitySet<CT_HoaDonBan>(new Action<CT_HoaDonBan>(this.attach_CT_HoaDonBans), new Action<CT_HoaDonBan>(this.detach_CT_HoaDonBans));
			this._CT_HoaDonNhaps = new EntitySet<CT_HoaDonNhap>(new Action<CT_HoaDonNhap>(this.attach_CT_HoaDonNhaps), new Action<CT_HoaDonNhap>(this.detach_CT_HoaDonNhaps));
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNCC", DbType="Int NOT NULL")]
		public int IdNCC
		{
			get
			{
				return this._IdNCC;
			}
			set
			{
				if ((this._IdNCC != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNCCChanging(value);
					this.SendPropertyChanging();
					this._IdNCC = value;
					this.SendPropertyChanged("IdNCC");
					this.OnIdNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenML", DbType="NVarChar(100)")]
		public string TenML
		{
			get
			{
				return this._TenML;
			}
			set
			{
				if ((this._TenML != value))
				{
					this.OnTenMLChanging(value);
					this.SendPropertyChanging();
					this._TenML = value;
					this.SendPropertyChanged("TenML");
					this.OnTenMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CongSuat", DbType="NVarChar(100)")]
		public string CongSuat
		{
			get
			{
				return this._CongSuat;
			}
			set
			{
				if ((this._CongSuat != value))
				{
					this.OnCongSuatChanging(value);
					this.SendPropertyChanging();
					this._CongSuat = value;
					this.SendPropertyChanged("CongSuat");
					this.OnCongSuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSX", DbType="Date")]
		public System.Nullable<System.DateTime> NamSX
		{
			get
			{
				return this._NamSX;
			}
			set
			{
				if ((this._NamSX != value))
				{
					this.OnNamSXChanging(value);
					this.SendPropertyChanging();
					this._NamSX = value;
					this.SendPropertyChanged("NamSX");
					this.OnNamSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhNang", DbType="NVarChar(100)")]
		public string TinhNang
		{
			get
			{
				return this._TinhNang;
			}
			set
			{
				if ((this._TinhNang != value))
				{
					this.OnTinhNangChanging(value);
					this.SendPropertyChanging();
					this._TinhNang = value;
					this.SendPropertyChanged("TinhNang");
					this.OnTinhNangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CongNghe", DbType="NVarChar(100)")]
		public string CongNghe
		{
			get
			{
				return this._CongNghe;
			}
			set
			{
				if ((this._CongNghe != value))
				{
					this.OnCongNgheChanging(value);
					this.SendPropertyChanging();
					this._CongNghe = value;
					this.SendPropertyChanged("CongNghe");
					this.OnCongNgheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int NOT NULL")]
		public int SoLuongTon
		{
			get
			{
				return this._SoLuongTon;
			}
			set
			{
				if ((this._SoLuongTon != value))
				{
					this.OnSoLuongTonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTon = value;
					this.SendPropertyChanged("SoLuongTon");
					this.OnSoLuongTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGiaNhap", DbType="Float")]
		public System.Nullable<double> DonGiaNhap
		{
			get
			{
				return this._DonGiaNhap;
			}
			set
			{
				if ((this._DonGiaNhap != value))
				{
					this.OnDonGiaNhapChanging(value);
					this.SendPropertyChanging();
					this._DonGiaNhap = value;
					this.SendPropertyChanged("DonGiaNhap");
					this.OnDonGiaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGiaBan", DbType="Float NOT NULL")]
		public double DonGiaBan
		{
			get
			{
				return this._DonGiaBan;
			}
			set
			{
				if ((this._DonGiaBan != value))
				{
					this.OnDonGiaBanChanging(value);
					this.SendPropertyChanging();
					this._DonGiaBan = value;
					this.SendPropertyChanged("DonGiaBan");
					this.OnDonGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MayLanh_CT_HoaDonBan", Storage="_CT_HoaDonBans", ThisKey="Id", OtherKey="IdML")]
		public EntitySet<CT_HoaDonBan> CT_HoaDonBans
		{
			get
			{
				return this._CT_HoaDonBans;
			}
			set
			{
				this._CT_HoaDonBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MayLanh_CT_HoaDonNhap", Storage="_CT_HoaDonNhaps", ThisKey="Id", OtherKey="IdML")]
		public EntitySet<CT_HoaDonNhap> CT_HoaDonNhaps
		{
			get
			{
				return this._CT_HoaDonNhaps;
			}
			set
			{
				this._CT_HoaDonNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_MayLanh", Storage="_NhaCungCap", ThisKey="IdNCC", OtherKey="Id", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.MayLanhs.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.MayLanhs.Add(this);
						this._IdNCC = value.Id;
					}
					else
					{
						this._IdNCC = default(int);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HoaDonBans(CT_HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.MayLanh = this;
		}
		
		private void detach_CT_HoaDonBans(CT_HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.MayLanh = null;
		}
		
		private void attach_CT_HoaDonNhaps(CT_HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.MayLanh = this;
		}
		
		private void detach_CT_HoaDonNhaps(CT_HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.MayLanh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenNCC;
		
		private string _DiaChi;
		
		private string _SDTNCC;
		
		private EntitySet<HoaDonNhap> _HoaDonNhaps;
		
		private EntitySet<MayLanh> _MayLanhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenNCCChanging(string value);
    partial void OnTenNCCChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTNCCChanging(string value);
    partial void OnSDTNCCChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._HoaDonNhaps = new EntitySet<HoaDonNhap>(new Action<HoaDonNhap>(this.attach_HoaDonNhaps), new Action<HoaDonNhap>(this.detach_HoaDonNhaps));
			this._MayLanhs = new EntitySet<MayLanh>(new Action<MayLanh>(this.attach_MayLanhs), new Action<MayLanh>(this.detach_MayLanhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNCC", DbType="NVarChar(100)")]
		public string TenNCC
		{
			get
			{
				return this._TenNCC;
			}
			set
			{
				if ((this._TenNCC != value))
				{
					this.OnTenNCCChanging(value);
					this.SendPropertyChanging();
					this._TenNCC = value;
					this.SendPropertyChanged("TenNCC");
					this.OnTenNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTNCC", DbType="VarChar(12)")]
		public string SDTNCC
		{
			get
			{
				return this._SDTNCC;
			}
			set
			{
				if ((this._SDTNCC != value))
				{
					this.OnSDTNCCChanging(value);
					this.SendPropertyChanging();
					this._SDTNCC = value;
					this.SendPropertyChanged("SDTNCC");
					this.OnSDTNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_HoaDonNhap", Storage="_HoaDonNhaps", ThisKey="Id", OtherKey="IdNCC")]
		public EntitySet<HoaDonNhap> HoaDonNhaps
		{
			get
			{
				return this._HoaDonNhaps;
			}
			set
			{
				this._HoaDonNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_MayLanh", Storage="_MayLanhs", ThisKey="Id", OtherKey="IdNCC")]
		public EntitySet<MayLanh> MayLanhs
		{
			get
			{
				return this._MayLanhs;
			}
			set
			{
				this._MayLanhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDonNhaps(HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_HoaDonNhaps(HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
		
		private void attach_MayLanhs(MayLanh entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_MayLanhs(MayLanh entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenNV;
		
		private string _TenDN;
		
		private string _MatKhau;
		
		private string _SDTNV;
		
		private int _IdLoaiNV;
		
		private EntitySet<HoaDonBan> _HoaDonBans;
		
		private EntitySet<HoaDonNhap> _HoaDonNhaps;
		
		private EntityRef<LoaiNV> _LoaiNV;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnSDTNVChanging(string value);
    partial void OnSDTNVChanged();
    partial void OnIdLoaiNVChanging(int value);
    partial void OnIdLoaiNVChanged();
    #endregion
		
		public NhanVien()
		{
			this._HoaDonBans = new EntitySet<HoaDonBan>(new Action<HoaDonBan>(this.attach_HoaDonBans), new Action<HoaDonBan>(this.detach_HoaDonBans));
			this._HoaDonNhaps = new EntitySet<HoaDonNhap>(new Action<HoaDonNhap>(this.attach_HoaDonNhaps), new Action<HoaDonNhap>(this.detach_HoaDonNhaps));
			this._LoaiNV = default(EntityRef<LoaiNV>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTNV", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string SDTNV
		{
			get
			{
				return this._SDTNV;
			}
			set
			{
				if ((this._SDTNV != value))
				{
					this.OnSDTNVChanging(value);
					this.SendPropertyChanging();
					this._SDTNV = value;
					this.SendPropertyChanged("SDTNV");
					this.OnSDTNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLoaiNV", DbType="Int NOT NULL")]
		public int IdLoaiNV
		{
			get
			{
				return this._IdLoaiNV;
			}
			set
			{
				if ((this._IdLoaiNV != value))
				{
					if (this._LoaiNV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLoaiNVChanging(value);
					this.SendPropertyChanging();
					this._IdLoaiNV = value;
					this.SendPropertyChanged("IdLoaiNV");
					this.OnIdLoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonBan", Storage="_HoaDonBans", ThisKey="Id", OtherKey="IdNV")]
		public EntitySet<HoaDonBan> HoaDonBans
		{
			get
			{
				return this._HoaDonBans;
			}
			set
			{
				this._HoaDonBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonNhap", Storage="_HoaDonNhaps", ThisKey="Id", OtherKey="IdNV")]
		public EntitySet<HoaDonNhap> HoaDonNhaps
		{
			get
			{
				return this._HoaDonNhaps;
			}
			set
			{
				this._HoaDonNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiNV_NhanVien", Storage="_LoaiNV", ThisKey="IdLoaiNV", OtherKey="Id", IsForeignKey=true)]
		public LoaiNV LoaiNV
		{
			get
			{
				return this._LoaiNV.Entity;
			}
			set
			{
				LoaiNV previousValue = this._LoaiNV.Entity;
				if (((previousValue != value) 
							|| (this._LoaiNV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiNV.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._LoaiNV.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._IdLoaiNV = value.Id;
					}
					else
					{
						this._IdLoaiNV = default(int);
					}
					this.SendPropertyChanged("LoaiNV");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDonBans(HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDonBans(HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDonNhaps(HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDonNhaps(HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyen")]
	public partial class PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdLoaiNV;
		
		private string _IdManHinh;
		
		private System.Nullable<bool> _CoQuyen;
		
		private EntityRef<LoaiNV> _LoaiNV;
		
		private EntityRef<ManHinh> _ManHinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdLoaiNVChanging(int value);
    partial void OnIdLoaiNVChanged();
    partial void OnIdManHinhChanging(string value);
    partial void OnIdManHinhChanged();
    partial void OnCoQuyenChanging(System.Nullable<bool> value);
    partial void OnCoQuyenChanged();
    #endregion
		
		public PhanQuyen()
		{
			this._LoaiNV = default(EntityRef<LoaiNV>);
			this._ManHinh = default(EntityRef<ManHinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLoaiNV", DbType="Int NOT NULL")]
		public int IdLoaiNV
		{
			get
			{
				return this._IdLoaiNV;
			}
			set
			{
				if ((this._IdLoaiNV != value))
				{
					if (this._LoaiNV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLoaiNVChanging(value);
					this.SendPropertyChanging();
					this._IdLoaiNV = value;
					this.SendPropertyChanged("IdLoaiNV");
					this.OnIdLoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdManHinh", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IdManHinh
		{
			get
			{
				return this._IdManHinh;
			}
			set
			{
				if ((this._IdManHinh != value))
				{
					if (this._ManHinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdManHinhChanging(value);
					this.SendPropertyChanging();
					this._IdManHinh = value;
					this.SendPropertyChanged("IdManHinh");
					this.OnIdManHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoQuyen", DbType="Bit")]
		public System.Nullable<bool> CoQuyen
		{
			get
			{
				return this._CoQuyen;
			}
			set
			{
				if ((this._CoQuyen != value))
				{
					this.OnCoQuyenChanging(value);
					this.SendPropertyChanging();
					this._CoQuyen = value;
					this.SendPropertyChanged("CoQuyen");
					this.OnCoQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiNV_PhanQuyen", Storage="_LoaiNV", ThisKey="IdLoaiNV", OtherKey="Id", IsForeignKey=true)]
		public LoaiNV LoaiNV
		{
			get
			{
				return this._LoaiNV.Entity;
			}
			set
			{
				LoaiNV previousValue = this._LoaiNV.Entity;
				if (((previousValue != value) 
							|| (this._LoaiNV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiNV.Entity = null;
						previousValue.PhanQuyens.Remove(this);
					}
					this._LoaiNV.Entity = value;
					if ((value != null))
					{
						value.PhanQuyens.Add(this);
						this._IdLoaiNV = value.Id;
					}
					else
					{
						this._IdLoaiNV = default(int);
					}
					this.SendPropertyChanged("LoaiNV");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ManHinh_PhanQuyen", Storage="_ManHinh", ThisKey="IdManHinh", OtherKey="Id", IsForeignKey=true)]
		public ManHinh ManHinh
		{
			get
			{
				return this._ManHinh.Entity;
			}
			set
			{
				ManHinh previousValue = this._ManHinh.Entity;
				if (((previousValue != value) 
							|| (this._ManHinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ManHinh.Entity = null;
						previousValue.PhanQuyens.Remove(this);
					}
					this._ManHinh.Entity = value;
					if ((value != null))
					{
						value.PhanQuyens.Add(this);
						this._IdManHinh = value.Id;
					}
					else
					{
						this._IdManHinh = default(string);
					}
					this.SendPropertyChanged("ManHinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
